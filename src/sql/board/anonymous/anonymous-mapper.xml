<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<!-- dtd는 유효성 검사를 해주는 것
	
 -->
<properties>

	<entry key="selectListCount">
SELECT  
				COUNT(*)
 		 FROM 
 		 		MAIN_BOARD
 		 WHERE 
 		 		BOARD_TYPE = 'B'
 		 AND 
 			 BOARD_STATUS = 'N'
	</entry>
	
	<entry key="selectAllList">
		 
SELECT * FROM(SELECT ROWNUM RNUM, A.*

FROM (
 
                            SELECT 
                                    B.BOARD_NO AS BOARD_NO,
                                    B.MEMBER_NO AS MEMBER_NO,
                                    BOARD_TYPE,
                                    CATEGORY,
                                    BOARD_TITLE,
                                    BOARD_CONTENT,
                                    TO_CHAR(CREATE_DATE, 'YY/MM/DD  HH:MI')CREATE_DATE,
                                    BOARD_COUNT,
                                  (CASE WHEN B.VOTE_YN= 'N' AND B.BOARD_NO = V.BOARD_NO THEN VOTE_TITLE ELSE NVL(VOTE_TITLE, ' ')  END) AS VOTE_TITLE,
                                    (CASE WHEN B.BOARD_NO= BOARD_ATTACH.BOARD_NO THEN BOARD_ATTACH.FILE_NO END) AS FILE_NO,
                                    FILE_LEVEL,                        
                                     (FILE_PATH || '/' || CHANGE_NAME) AS FILE_PATH ,
                                    FILE_STATUS,
                                    ORIGIN_NAME ,
                                    SUM(BOARD_LIKE_COUNT)AS POST_LIKE, 
                                    SUM(BOARD_DISLIKE_COUNT)AS POST_DISLIKE ,
                                    COUNT(REPLY_NO) AS REPLY_COUNT
                             FROM
                                    MAIN_BOARD B 
                             LEFT JOIN   
                                    BOARD_VOTE V ON(V.BOARD_NO = B.BOARD_NO)
                             LEFT JOIN  
                                    hashtag_bridge HB ON(HB.BOARD_NO = B.BOARD_NO)
                             LEFT JOIN 
                                    BOARD_ATTACH  ON(BOARD_ATTACH.BOARD_NO = B.BOARD_NO)
                            LEFT JOIN 
                                    BOARD_LIKE_POST BK ON(bk.board_no = B.BOARD_NO)
                            LEFT JOIN 
                                    reply R ON(R.BOARD_NO = B.BOARD_NO)
                             WHERE 
                                    BOARD_TYPE= 'B'
                              AND 
                                    B.BOARD_STATUS = 'N' --이거 꼭 넣어야함
                              AND 
                                    B.BOARD_STATUS !='S' 
                             
                             group by B.BOARD_NO, B.MEMBER_NO, BOARD_TYPE, CATEGORY, BOARD_TITLE, 
                                    BOARD_CONTENT, TO_CHAR(CREATE_DATE, 'YY/MM/DD  HH:MI'), BOARD_COUNT, (CASE WHEN B.VOTE_YN= 'N' AND B.BOARD_NO = V.BOARD_NO THEN VOTE_TITLE ELSE NVL(VOTE_TITLE, ' ')  END), (CASE WHEN B.BOARD_NO= BOARD_ATTACH.BOARD_NO THEN FILE_NO END), 
                                    CHANGE_NAME, FILE_LEVEL, FILE_NO, FILE_PATH, FILE_STATUS, 
                                    ORIGIN_NAME
                             HAVING 
                             		FILE_LEVEL = 0 OR FILE_LEVEL IS NULL
                                ORDER BY B.BOARD_NO DESC)
                                A)
 WHERE RNUM BETWEEN ? AND ?
		 
		
	</entry>
	
	<entry key="selectAllBoard">
	SELECT A.*
                        FROM(
 
                            SELECT 
                                    B.BOARD_NO,
                                    B.MEMBER_NO,
                                    BOARD_TYPE,
                                    CATEGORY,
                                    BOARD_TITLE,
                                    BOARD_CONTENT,
                                    TO_CHAR(CREATE_DATE, 'YY/MM/DD  HH:MI')CREATE_DATE,
                                    BOARD_COUNT,
                                    (CASE WHEN B.VOTE_YN= 'N' AND B.BOARD_NO = V.BOARD_NO THEN VOTE_TITLE ELSE NVL(VOTE_TITLE, ' ')  END) AS VOTE_TITLE,
                                    (CASE WHEN B.BOARD_NO= F.BOARD_NO THEN FILE_NO END) AS FILE_NO,
                                    
                                    FILE_LEVEL,                                    
                                     (FILE_PATH || '/' || CHANGE_NAME) AS FILE_PATH, 
                                    FILE_STATUS,
                                    ORIGIN_NAME ,
                                    SUM(BOARD_LIKE_COUNT)AS POST_LIKE, 
                                    SUM(BOARD_DISLIKE_COUNT)AS POST_DISLIKE ,
                                    COUNT(REPLY_NO) AS REPLY_COUNT
                             FROM
                                    MAIN_BOARD B 
                             LEFT JOIN   
                                    BOARD_VOTE V ON(V.BOARD_NO = B.BOARD_NO)
                             LEFT JOIN  
                                    hashtag_bridge HB ON(HB.BOARD_NO = B.BOARD_NO)
                             LEFT JOIN 
                                    BOARD_ATTACH F ON(F.BOARD_NO = B.BOARD_NO)
                            LEFT JOIN 
                                    BOARD_LIKE_POST BK ON(bk.board_no = B.BOARD_NO)
                            LEFT JOIN 
                                    reply R ON(R.BOARD_NO = B.BOARD_NO)
                             WHERE 
                                    BOARD_TYPE= 'B'
                              AND 
                                    B.BOARD_STATUS = 'N' 
                              AND 
                                    B.BOARD_STATUS !='S' 
                              AND B.BOARD_NO= ?
                             group by B.BOARD_NO, B.MEMBER_NO, BOARD_TYPE, CATEGORY, BOARD_TITLE, 
                                    BOARD_CONTENT, TO_CHAR(CREATE_DATE, 'YY/MM/DD  HH:MI'), BOARD_COUNT, (CASE WHEN B.VOTE_YN= 'N' AND B.BOARD_NO = V.BOARD_NO THEN VOTE_TITLE ELSE NVL(VOTE_TITLE, ' ')  END), (CASE WHEN B.BOARD_NO= F.BOARD_NO THEN FILE_NO END), 
                                    CHANGE_NAME, FILE_LEVEL, FILE_NO, FILE_PATH, FILE_STATUS, 
                                    ORIGIN_NAME
                                ) A
	</entry>
	

	
	
	
	<entry key="selectBoardLike">
	
		SELECT 
				BOARD_NO,
				SUM(BOARD_LIKE_COUNT)AS POST_LIKE, 
				SUM(BOARD_DISLIKE_COUNT)AS POST_DISLIKE 
		 FROM 
				BOARD_LIKE_POST
		GROUP BY 
				BOARD_NO
				
	</entry>
	<entry key="replyCount">
	
		SELECT  BOARD_NO,
        COUNT(REPLY_NO) AS REPLY_COUNT
  		FROM reply
  		GROUP BY BOARD_NO
	</entry>
	
	
	<entry key="inserAnonymous">
				
				INSERT 
		  INTO 
		       MAIN_BOARD
		       (
		        BOARD_NO
		       ,MEMBER_NO
		       ,BOARD_TYPE
		       ,CATEGORY
		       ,BOARD_TITLE
		       ,BOARD_CONTENT
		       )
		VALUES
		        (
		        SEQ_BNO.NEXTVAL
		       ,?
		       ,'B'
		       ,?
		       ,?
		       ,?
		       )
				
	
	
	</entry>
	
	<entry key="insertAnAttachment">	
	
				INSERT 
		  INTO
		        BOARD_ATTACH
		        (
		        FILE_NO
		        ,BOARD_NO
		        ,FILE_LEVEL
		        ,ORIGIN_NAME
		        ,CHANGE_NAME
		        ,FILE_PATH
		        )
		VALUES
		        (
		        SEQ_FNO.NEXTVAL
		        ,SEQ_BNO.CURRVAL
		        ,?
		        ,?
		        ,?
		        ,?
		        )
	
	</entry>
	
	
	


	<entry key="increasBoard">
		UPDATE 
				MAIN_BOARD
		  SET 
		       	BOARD_COUNT  = BOARD_COUNT +1
		WHERE 
				BOARD_STATUS = 'N'
		  AND 
		         BOARD_NO  = ?
	</entry>
	
	
	<entry key="selectAttach">
		SELECT FILE_NO,
				BOARD_NO,
				FILE_LEVEL,
				ORIGIN_NAME,
				(FILE_PATH || '/' || CHANGE_NAME) AS FILE_PATH 
				
		  FROM 
				BOARD_ATTACH
		 WHERE 
		  		BOARD_NO= ?
		   AND 
		   		FILE_STATUS = 'N'
	</entry>
	
	
	<entry key="deleteBoard">
		UPDATE 
       			 MAIN_BOARD
		   SET 
		        BOARD_STATUS = 'Y'
		 WHERE  BOARD_TYPE = 'B'
		   AND 
		        BOARD_NO = ?
	
	</entry>
	
	
		<entry key="deleteAtt">
		UPDATE BOARD_ATTACH
		SET FILE_STATUS ='Y'
		WHERE BOARD_NO=?
	
	</entry>
	
	<entry key="selectReply">
		SELECT * 
				FROM(SELECT ROWNUM RNUM, A.*
				                            FROM(SELECT R.REPLY_NO
				                                       , BOARD_NO
				                                       , M.MEMBER_NO AS MEMBER_NO
				                                       , NICKNAME
				                                       , REPLY_CONTENT
				                                       , REPLY_DATE
				                                       , SUM(REPLY_LIKE_COUNT) AS RE_LIKE
				                                       , SUM(REPLY_DISLIKE_COUNT ) AS RE_DISLIKE
				                                 FROM REPLY R
				                                 LEFT JOIN MEMBER M ON(R.MEMBER_NO = M.MEMBER_NO)
				                                 LEFT JOIN reply_like_post L ON ( R.REPLY_NO = L.REPLY_NO)
				                                 WHERE REPLY_YN = 'N' 
				                                 AND BOARD_NO = ?
				                                 group by R.REPLY_NO, BOARD_NO, NICKNAME, REPLY_CONTENT, REPLY_DATE, M.MEMBER_NO
				                                  ORDER BY RE_LIKE )A)
				WHERE RNUM  BETWEEN ? AND ?
	</entry>

		<entry key="selectAttachAll">
		SELECT FILE_NO,
				BOARD_NO,
				FILE_LEVEL,
				ORIGIN_NAME,
				(FILE_PATH || '/' || CHANGE_NAME) AS FILE_PATH 
				
		  FROM 
				BOARD_ATTACH
		 WHERE 
	
		   		 FILE_LEVEL = 0
		   AND 
		   		FILE_STATUS = 'N'
	</entry>
	
	
	

</properties>